class Graphics {   
        
function void drawChicken1(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +224, 0);
	do Memory.poke(memAddress +256, 0);
	do Memory.poke(memAddress +288, 0);
	do Memory.poke(memAddress +320, 0);
	do Memory.poke(memAddress +352, 0);
	do Memory.poke(memAddress +384, 0);
	do Memory.poke(memAddress +416, 0);
	do Memory.poke(memAddress +448, ~32767);
	do Memory.poke(memAddress +480, -14592);
	do Memory.poke(memAddress +512, 28416);
	do Memory.poke(memAddress +544, 16128);
	do Memory.poke(memAddress +576, 7168);
	do Memory.poke(memAddress +608, 2048);
	do Memory.poke(memAddress +640, 4096);
	do Memory.poke(memAddress +672, 12288);
	do Memory.poke(memAddress +704, 24576);
	do Memory.poke(memAddress +736, -16384);
	do Memory.poke(memAddress +768, ~32767);
	do Memory.poke(memAddress +800, 0);
	do Memory.poke(memAddress +832, 0);
	do Memory.poke(memAddress +864, 0);
	do Memory.poke(memAddress +896, 0);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, ~32767);
	do Memory.poke(memAddress +992, 16384);
	// column 1
	do Memory.poke(memAddress +1, 0);
	do Memory.poke(memAddress +33, 0);
	do Memory.poke(memAddress +65, 0);
	do Memory.poke(memAddress +97, 0);
	do Memory.poke(memAddress +129, ~32767);
	do Memory.poke(memAddress +161, 24576);
	do Memory.poke(memAddress +193, 4096);
	do Memory.poke(memAddress +225, 4096);
	do Memory.poke(memAddress +257, 4096);
	do Memory.poke(memAddress +289, 12288);
	do Memory.poke(memAddress +321, -8192);
	do Memory.poke(memAddress +353, -32);
	do Memory.poke(memAddress +385, 16440);
	do Memory.poke(memAddress +417, 14);
	do Memory.poke(memAddress +449, 3);
	do Memory.poke(memAddress +481, 24576);
	do Memory.poke(memAddress +513, 12288);
	do Memory.poke(memAddress +545, 7168);
	do Memory.poke(memAddress +577, 2032);
	do Memory.poke(memAddress +609, 0);
	do Memory.poke(memAddress +641, 0);
	do Memory.poke(memAddress +673, 0);
	do Memory.poke(memAddress +705, -8192);
	do Memory.poke(memAddress +737, 8064);
	do Memory.poke(memAddress +769, 2273);
	do Memory.poke(memAddress +801, 2079);
	do Memory.poke(memAddress +833, 2052);
	do Memory.poke(memAddress +865, 2054);
	do Memory.poke(memAddress +897, 7170);
	do Memory.poke(memAddress +929, 10759);
	do Memory.poke(memAddress +961, 2314);
	do Memory.poke(memAddress +993, 18);
	// column 2
	do Memory.poke(memAddress +2, 0);
	do Memory.poke(memAddress +34, 0);
	do Memory.poke(memAddress +66, 0);
	do Memory.poke(memAddress +98, 126);
	do Memory.poke(memAddress +130, 203);
	do Memory.poke(memAddress +162, 256);
	do Memory.poke(memAddress +194, 1816);
	do Memory.poke(memAddress +226, 7704);
	do Memory.poke(memAddress +258, 1536);
	do Memory.poke(memAddress +290, 768);
	do Memory.poke(memAddress +322, 192);
	do Memory.poke(memAddress +354, 112);
	do Memory.poke(memAddress +386, 28);
	do Memory.poke(memAddress +418, 28);
	do Memory.poke(memAddress +450, 240);
	do Memory.poke(memAddress +482, 128);
	do Memory.poke(memAddress +514, 128);
	do Memory.poke(memAddress +546, 128);
	do Memory.poke(memAddress +578, 64);
	do Memory.poke(memAddress +610, 112);
	do Memory.poke(memAddress +642, 24);
	do Memory.poke(memAddress +674, 12);
	do Memory.poke(memAddress +706, 3);
	do Memory.poke(memAddress +738, 0);
	do Memory.poke(memAddress +770, 0);
	do Memory.poke(memAddress +802, 0);
	do Memory.poke(memAddress +834, 0);
	do Memory.poke(memAddress +866, 0);
	do Memory.poke(memAddress +898, 0);
	do Memory.poke(memAddress +930, 0);
	do Memory.poke(memAddress +962, 0);
	do Memory.poke(memAddress +994, 0);
	return;
}
function void drawChicken2(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +224, 1);
	do Memory.poke(memAddress +256, 0);
	do Memory.poke(memAddress +288, 0);
	do Memory.poke(memAddress +320, 0);
	do Memory.poke(memAddress +352, 0);
	do Memory.poke(memAddress +384, 0);
	do Memory.poke(memAddress +416, 0);
	do Memory.poke(memAddress +448, 0);
	do Memory.poke(memAddress +480, 0);
	do Memory.poke(memAddress +512, 0);
	do Memory.poke(memAddress +544, 0);
	do Memory.poke(memAddress +576, 0);
	do Memory.poke(memAddress +608, 0);
	do Memory.poke(memAddress +640, 0);
	do Memory.poke(memAddress +672, 0);
	do Memory.poke(memAddress +704, 0);
	do Memory.poke(memAddress +736, 0);
	do Memory.poke(memAddress +768, 0);
	do Memory.poke(memAddress +800, 0);
	do Memory.poke(memAddress +832, 0);
	do Memory.poke(memAddress +864, 0);
	do Memory.poke(memAddress +896, 0);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	// column 2
	// column -3
	do Memory.poke(memAddress +477, 28672);
	do Memory.poke(memAddress +509, -4096);
	do Memory.poke(memAddress +541, -4096);
	do Memory.poke(memAddress +573, -16384);
	do Memory.poke(memAddress +605, ~32767);
	// column -2
	do Memory.poke(memAddress -2, 0);
	do Memory.poke(memAddress +30, 0);
	do Memory.poke(memAddress +62, 0);
	do Memory.poke(memAddress +94, 0);
	do Memory.poke(memAddress +126, 0);
	do Memory.poke(memAddress +158, 0);
	do Memory.poke(memAddress +190, 0);
	do Memory.poke(memAddress +222, 0);
	do Memory.poke(memAddress +254, 0);
	do Memory.poke(memAddress +286, 0);
	do Memory.poke(memAddress +318, 0);
	do Memory.poke(memAddress +350, -512);
	do Memory.poke(memAddress +382, 896);
	do Memory.poke(memAddress +414, 224);
	do Memory.poke(memAddress +446, 56);
	do Memory.poke(memAddress +478, 12);
	do Memory.poke(memAddress +510, 6);
	do Memory.poke(memAddress +542, -16381);
	do Memory.poke(memAddress +574, 32513);
	do Memory.poke(memAddress +606, 0);
	do Memory.poke(memAddress +638, 1);
	do Memory.poke(memAddress +670, 3);
	do Memory.poke(memAddress +702, 6);
	do Memory.poke(memAddress +734, -2036);
	do Memory.poke(memAddress +766, -29160);
	do Memory.poke(memAddress +798, -32272);
	do Memory.poke(memAddress +830, -32704);
	do Memory.poke(memAddress +862, -32672);
	do Memory.poke(memAddress +894, -16352);
	do Memory.poke(memAddress +926, -24464);
	do Memory.poke(memAddress +958, -28504);
	do Memory.poke(memAddress +990, 292);
	// column -1
	do Memory.poke(memAddress -1, 0);
	do Memory.poke(memAddress +31, 0);
	do Memory.poke(memAddress +63, 0);
	do Memory.poke(memAddress +95, 2016);
	do Memory.poke(memAddress +127, 3256);
	do Memory.poke(memAddress +159, 4102);
	do Memory.poke(memAddress +191, 29057);
	do Memory.poke(memAddress +223, -7807);
	do Memory.poke(memAddress +255, 24577);
	do Memory.poke(memAddress +287, 12291);
	do Memory.poke(memAddress +319, 3086);
	do Memory.poke(memAddress +351, 1807);
	do Memory.poke(memAddress +383, 452);
	do Memory.poke(memAddress +415, 448);
	do Memory.poke(memAddress +447, 3840);
	do Memory.poke(memAddress +479, 2054);
	do Memory.poke(memAddress +511, 2051);
	do Memory.poke(memAddress +543, 2049);
	do Memory.poke(memAddress +575, 1024);
	do Memory.poke(memAddress +607, 1792);
	do Memory.poke(memAddress +639, 384);
	do Memory.poke(memAddress +671, 192);
	do Memory.poke(memAddress +703, 62);
	do Memory.poke(memAddress +735, 1);
	do Memory.poke(memAddress +767, 0);
	do Memory.poke(memAddress +799, 0);
	do Memory.poke(memAddress +831, 0);
	do Memory.poke(memAddress +863, 0);
	do Memory.poke(memAddress +895, 1);
	do Memory.poke(memAddress +927, 2);
	do Memory.poke(memAddress +959, 0);
	do Memory.poke(memAddress +991, 0);
	return;
}
function void chickenReset(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +224, 0);
	do Memory.poke(memAddress +256, 0);
	do Memory.poke(memAddress +288, 0);
	do Memory.poke(memAddress +320, 0);
	do Memory.poke(memAddress +352, 0);
	do Memory.poke(memAddress +384, 0);
	do Memory.poke(memAddress +416, 0);
	do Memory.poke(memAddress +448, 0);
	do Memory.poke(memAddress +480, 0);
	do Memory.poke(memAddress +512, 0);
	do Memory.poke(memAddress +544, 0);
	do Memory.poke(memAddress +576, 0);
	do Memory.poke(memAddress +608, 0);
	do Memory.poke(memAddress +640, 0);
	do Memory.poke(memAddress +672, 0);
	do Memory.poke(memAddress +704, 0);
	do Memory.poke(memAddress +736, 0);
	do Memory.poke(memAddress +768, 0);
	do Memory.poke(memAddress +800, 0);
	do Memory.poke(memAddress +832, 0);
	do Memory.poke(memAddress +864, 0);
	do Memory.poke(memAddress +896, 0);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 8);
	// column 1
	do Memory.poke(memAddress +1, 0);
	do Memory.poke(memAddress +33, 0);
	do Memory.poke(memAddress +65, 0);
	do Memory.poke(memAddress +97, 0);
	do Memory.poke(memAddress +129, 0);
	do Memory.poke(memAddress +161, 0);
	do Memory.poke(memAddress +193, 0);
	do Memory.poke(memAddress +225, 0);
	do Memory.poke(memAddress +257, 0);
	do Memory.poke(memAddress +289, 0);
	do Memory.poke(memAddress +321, 0);
	do Memory.poke(memAddress +353, 0);
	do Memory.poke(memAddress +385, 0);
	do Memory.poke(memAddress +417, 0);
	do Memory.poke(memAddress +449, 0);
	do Memory.poke(memAddress +481, 0);
	do Memory.poke(memAddress +513, 0);
	do Memory.poke(memAddress +545, 0);
	do Memory.poke(memAddress +577, 0);
	do Memory.poke(memAddress +609, 0);
	do Memory.poke(memAddress +641, 0);
	do Memory.poke(memAddress +673, 0);
	do Memory.poke(memAddress +705, 0);
	do Memory.poke(memAddress +737, 0);
	do Memory.poke(memAddress +769, 0);
	do Memory.poke(memAddress +801, 0);
	do Memory.poke(memAddress +833, 0);
	do Memory.poke(memAddress +865, 0);
	do Memory.poke(memAddress +897, 0);
	do Memory.poke(memAddress +929, 0);
	do Memory.poke(memAddress +961, 0);
	do Memory.poke(memAddress +993, 0);
	// column 2
	do Memory.poke(memAddress +2, 0);
	do Memory.poke(memAddress +34, 0);
	do Memory.poke(memAddress +66, 0);
	do Memory.poke(memAddress +98, 0);
	do Memory.poke(memAddress +130, 0);
	do Memory.poke(memAddress +162, 0);
	do Memory.poke(memAddress +194, 0);
	do Memory.poke(memAddress +226, 0);
	do Memory.poke(memAddress +258, 0);
	do Memory.poke(memAddress +290, 0);
	do Memory.poke(memAddress +322, 0);
	do Memory.poke(memAddress +354, 0);
	do Memory.poke(memAddress +386, 0);
	do Memory.poke(memAddress +418, 0);
	do Memory.poke(memAddress +450, 0);
	do Memory.poke(memAddress +482, 0);
	do Memory.poke(memAddress +514, 0);
	do Memory.poke(memAddress +546, 0);
	do Memory.poke(memAddress +578, 0);
	do Memory.poke(memAddress +610, 0);
	do Memory.poke(memAddress +642, 0);
	do Memory.poke(memAddress +674, 0);
	do Memory.poke(memAddress +706, 0);
	do Memory.poke(memAddress +738, 0);
	do Memory.poke(memAddress +770, 0);
	do Memory.poke(memAddress +802, 0);
	do Memory.poke(memAddress +834, 0);
	do Memory.poke(memAddress +866, 0);
	do Memory.poke(memAddress +898, 0);
	do Memory.poke(memAddress +930, 0);
	do Memory.poke(memAddress +962, 0);
	do Memory.poke(memAddress +994, 0);
	return;
}
function void chickenJump(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +224, 0);
	do Memory.poke(memAddress +256, 0);
	do Memory.poke(memAddress +288, 0);
	do Memory.poke(memAddress +320, ~32767);
	do Memory.poke(memAddress +352, -14592);
	do Memory.poke(memAddress +384, 28416);
	do Memory.poke(memAddress +416, 16128);
	do Memory.poke(memAddress +448, 7168);
	do Memory.poke(memAddress +480, 2048);
	do Memory.poke(memAddress +512, 4096);
	do Memory.poke(memAddress +544, 12288);
	do Memory.poke(memAddress +576, 24576);
	do Memory.poke(memAddress +608, -16384);
	do Memory.poke(memAddress +640, ~32767);
	do Memory.poke(memAddress +672, 0);
	do Memory.poke(memAddress +704, 0);
	do Memory.poke(memAddress +736, 0);
	do Memory.poke(memAddress +768, 0);
	do Memory.poke(memAddress +800, 0);
	do Memory.poke(memAddress +832, ~32767);
	do Memory.poke(memAddress +864, 16384);
	do Memory.poke(memAddress +896, 0);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	do Memory.poke(memAddress +1, ~32767);
	do Memory.poke(memAddress +33, 24576);
	do Memory.poke(memAddress +65, 4096);
	do Memory.poke(memAddress +97, 4096);
	do Memory.poke(memAddress +129, 4096);
	do Memory.poke(memAddress +161, 12288);
	do Memory.poke(memAddress +193, -8192);
	do Memory.poke(memAddress +225, -32);
	do Memory.poke(memAddress +257, 16440);
	do Memory.poke(memAddress +289, 14);
	do Memory.poke(memAddress +321, 3);
	do Memory.poke(memAddress +353, 24576);
	do Memory.poke(memAddress +385, 12288);
	do Memory.poke(memAddress +417, 7168);
	do Memory.poke(memAddress +449, 2032);
	do Memory.poke(memAddress +481, 0);
	do Memory.poke(memAddress +513, 0);
	do Memory.poke(memAddress +545, 0);
	do Memory.poke(memAddress +577, -8192);
	do Memory.poke(memAddress +609, 8064);
	do Memory.poke(memAddress +641, 2273);
	do Memory.poke(memAddress +673, 2079);
	do Memory.poke(memAddress +705, 2052);
	do Memory.poke(memAddress +737, 2054);
	do Memory.poke(memAddress +769, 7170);
	do Memory.poke(memAddress +801, 10759);
	do Memory.poke(memAddress +833, 2314);
	do Memory.poke(memAddress +865, 18);
	do Memory.poke(memAddress +897, 0);
	do Memory.poke(memAddress +929, 0);
	do Memory.poke(memAddress +961, 0);
	do Memory.poke(memAddress +993, 0);
	// column 2
	do Memory.poke(memAddress +2, 255);
	do Memory.poke(memAddress +34, 256);
	do Memory.poke(memAddress +66, 1816);
	do Memory.poke(memAddress +98, 7704);
	do Memory.poke(memAddress +130, 1536);
	do Memory.poke(memAddress +162, 768);
	do Memory.poke(memAddress +194, 192);
	do Memory.poke(memAddress +226, 112);
	do Memory.poke(memAddress +258, 28);
	do Memory.poke(memAddress +290, 28);
	do Memory.poke(memAddress +322, 240);
	do Memory.poke(memAddress +354, 128);
	do Memory.poke(memAddress +386, 128);
	do Memory.poke(memAddress +418, 128);
	do Memory.poke(memAddress +450, 64);
	do Memory.poke(memAddress +482, 112);
	do Memory.poke(memAddress +514, 24);
	do Memory.poke(memAddress +546, 12);
	do Memory.poke(memAddress +578, 3);
	do Memory.poke(memAddress +610, 0);
	do Memory.poke(memAddress +642, 0);
	do Memory.poke(memAddress +674, 0);
	do Memory.poke(memAddress +706, 0);
	do Memory.poke(memAddress +738, 0);
	do Memory.poke(memAddress +770, 0);
	do Memory.poke(memAddress +802, 0);
	do Memory.poke(memAddress +834, 0);
	do Memory.poke(memAddress +866, 0);
	do Memory.poke(memAddress +898, 0);
	do Memory.poke(memAddress +930, 0);
	do Memory.poke(memAddress +962, 0);
	do Memory.poke(memAddress +994, 0);
	return;
}
function void chickenReturn(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 1);
	do Memory.poke(memAddress +96, 7);
	do Memory.poke(memAddress +128, 30);
	do Memory.poke(memAddress +160, 6);
	do Memory.poke(memAddress +192, 3);
	do Memory.poke(memAddress +224, 0);
	do Memory.poke(memAddress +256, 0);
	do Memory.poke(memAddress +288, 0);
	do Memory.poke(memAddress +320, 0);
	do Memory.poke(memAddress +352, 0);
	do Memory.poke(memAddress +384, 0);
	do Memory.poke(memAddress +416, 0);
	do Memory.poke(memAddress +448, 0);
	do Memory.poke(memAddress +480, 0);
	do Memory.poke(memAddress +512, 0);
	do Memory.poke(memAddress +544, 0);
	do Memory.poke(memAddress +576, 0);
	do Memory.poke(memAddress +608, 0);
	do Memory.poke(memAddress +640, 0);
	do Memory.poke(memAddress +672, 0);
	do Memory.poke(memAddress +704, 0);
	do Memory.poke(memAddress +736, 0);
	do Memory.poke(memAddress +768, 0);
	do Memory.poke(memAddress +800, 0);
	do Memory.poke(memAddress +832, 0);
	do Memory.poke(memAddress +864, 0);
	do Memory.poke(memAddress +896, 0);
	// column 1
	// column 2
	// column -2
	do Memory.poke(memAddress -2, 0);
	do Memory.poke(memAddress +30, 0);
	do Memory.poke(memAddress +62, 0);
	do Memory.poke(memAddress +94, 0);
	do Memory.poke(memAddress +126, 0);
	do Memory.poke(memAddress +158, 0);
	do Memory.poke(memAddress +190, 0);
	do Memory.poke(memAddress +222, 0);
	do Memory.poke(memAddress +254, -8192);
	do Memory.poke(memAddress +286, 14336);
	do Memory.poke(memAddress +318, 3584);
	do Memory.poke(memAddress +350, 896);
	do Memory.poke(memAddress +382, 199);
	do Memory.poke(memAddress +414, 111);
	do Memory.poke(memAddress +446, 63);
	do Memory.poke(memAddress +478, -4068);
	do Memory.poke(memAddress +510, 8);
	do Memory.poke(memAddress +542, 16);
	do Memory.poke(memAddress +574, 48);
	do Memory.poke(memAddress +606, 96);
	do Memory.poke(memAddress +638, -32576);
	do Memory.poke(memAddress +670, -7808);
	do Memory.poke(memAddress +702, 7936);
	do Memory.poke(memAddress +734, 1024);
	do Memory.poke(memAddress +766, 1536);
	do Memory.poke(memAddress +798, 512);
	do Memory.poke(memAddress +830, 1792);
	do Memory.poke(memAddress +862, 2688);
	do Memory.poke(memAddress +894, 4672);
	// column -1
	do Memory.poke(memAddress -1, 32256);
	do Memory.poke(memAddress +31, -13440);
	do Memory.poke(memAddress +63, 96);
	do Memory.poke(memAddress +95, 6160);
	do Memory.poke(memAddress +127, 6160);
	do Memory.poke(memAddress +159, 16);
	do Memory.poke(memAddress +191, 48);
	do Memory.poke(memAddress +223, -16160);
	do Memory.poke(memAddress +255, 28927);
	do Memory.poke(memAddress +287, 7232);
	do Memory.poke(memAddress +319, 7168);
	do Memory.poke(memAddress +351, -4096);
	do Memory.poke(memAddress +383, -32672);
	do Memory.poke(memAddress +415, -32720);
	do Memory.poke(memAddress +447, -32740);
	do Memory.poke(memAddress +479, 16391);
	do Memory.poke(memAddress +511, 28672);
	do Memory.poke(memAddress +543, 6144);
	do Memory.poke(memAddress +575, 3072);
	do Memory.poke(memAddress +607, 992);
	do Memory.poke(memAddress +639, 31);
	do Memory.poke(memAddress +671, 8);
	do Memory.poke(memAddress +703, 8);
	do Memory.poke(memAddress +735, 8);
	do Memory.poke(memAddress +767, 8);
	do Memory.poke(memAddress +799, 28);
	do Memory.poke(memAddress +831, 42);
	do Memory.poke(memAddress +863, 9);
	do Memory.poke(memAddress +895, 0);
	return;
}
function void drawFarmer(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 28672);
	do Memory.poke(memAddress +32, -1024);
	do Memory.poke(memAddress +64, -256);
	do Memory.poke(memAddress +96, -256);
	do Memory.poke(memAddress +128, -256);
	do Memory.poke(memAddress +160, -29184);
	do Memory.poke(memAddress +192, 1536);
	do Memory.poke(memAddress +224, 512);
	do Memory.poke(memAddress +256, -29952);
	do Memory.poke(memAddress +288, 256);
	do Memory.poke(memAddress +320, 256);
	do Memory.poke(memAddress +352, -1792);
	do Memory.poke(memAddress +384, 1280);
	do Memory.poke(memAddress +416, 768);
	do Memory.poke(memAddress +448, 7696);
	do Memory.poke(memAddress +480, -3887);
	do Memory.poke(memAddress +512, -16266);
	do Memory.poke(memAddress +544, -16324);
	do Memory.poke(memAddress +576, 7696);
	do Memory.poke(memAddress +608, -3472);
	do Memory.poke(memAddress +640, 912);
	do Memory.poke(memAddress +672, 528);
	do Memory.poke(memAddress +704, 3600);
	do Memory.poke(memAddress +736, 6160);
	do Memory.poke(memAddress +768, -2032);
	do Memory.poke(memAddress +800, 2064);
	do Memory.poke(memAddress +832, 2048);
	do Memory.poke(memAddress +864, -13312);
	do Memory.poke(memAddress +896, 31744);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	do Memory.poke(memAddress +1, 0);
	do Memory.poke(memAddress +33, 0);
	do Memory.poke(memAddress +65, 1);
	do Memory.poke(memAddress +97, 7);
	do Memory.poke(memAddress +129, 15);
	do Memory.poke(memAddress +161, 1);
	do Memory.poke(memAddress +193, 3);
	do Memory.poke(memAddress +225, 6);
	do Memory.poke(memAddress +257, 4);
	do Memory.poke(memAddress +289, 12);
	do Memory.poke(memAddress +321, 8);
	do Memory.poke(memAddress +353, 9);
	do Memory.poke(memAddress +385, 9);
	do Memory.poke(memAddress +417, 12);
	do Memory.poke(memAddress +449, 4);
	do Memory.poke(memAddress +481, 3);
	do Memory.poke(memAddress +513, 192);
	do Memory.poke(memAddress +545, 108);
	do Memory.poke(memAddress +577, 58);
	do Memory.poke(memAddress +609, 19);
	do Memory.poke(memAddress +641, 24);
	do Memory.poke(memAddress +673, 8);
	do Memory.poke(memAddress +705, 12);
	do Memory.poke(memAddress +737, 6);
	do Memory.poke(memAddress +769, 7);
	do Memory.poke(memAddress +801, 4);
	do Memory.poke(memAddress +833, 12);
	do Memory.poke(memAddress +865, 9);
	do Memory.poke(memAddress +897, 15);
	do Memory.poke(memAddress +929, 0);
	do Memory.poke(memAddress +961, 0);
	do Memory.poke(memAddress +993, 0);
	return;
}
function void moveFarmer1(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 1792);
	do Memory.poke(memAddress +32, 4032);
	do Memory.poke(memAddress +64, 8176);
	do Memory.poke(memAddress +96, 32752);
	do Memory.poke(memAddress +128, -16);
	do Memory.poke(memAddress +160, 6368);
	do Memory.poke(memAddress +192, 12384);
	do Memory.poke(memAddress +224, 24608);
	do Memory.poke(memAddress +256, 18608);
	do Memory.poke(memAddress +288, -16368);
	do Memory.poke(memAddress +320, -32752);
	do Memory.poke(memAddress +352, -24688);
	do Memory.poke(memAddress +384, -28592);
	do Memory.poke(memAddress +416, -16336);
	do Memory.poke(memAddress +448, 16865);
	do Memory.poke(memAddress +480, 16141);
	do Memory.poke(memAddress +512, 3079);
	do Memory.poke(memAddress +544, -13309);
	do Memory.poke(memAddress +576, -24095);
	do Memory.poke(memAddress +608, 16167);
	do Memory.poke(memAddress +640, -32711);
	do Memory.poke(memAddress +672, -32735);
	do Memory.poke(memAddress +704, -16159);
	do Memory.poke(memAddress +736, 24961);
	do Memory.poke(memAddress +768, 32641);
	do Memory.poke(memAddress +800, 16513);
	do Memory.poke(memAddress +832, -16256);
	do Memory.poke(memAddress +864, -25408);
	do Memory.poke(memAddress +896, -2112);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	do Memory.poke(memAddress +1, 0);
	do Memory.poke(memAddress +33, 0);
	do Memory.poke(memAddress +65, 0);
	do Memory.poke(memAddress +97, 0);
	do Memory.poke(memAddress +129, 0);
	do Memory.poke(memAddress +161, 0);
	do Memory.poke(memAddress +193, 0);
	do Memory.poke(memAddress +225, 0);
	do Memory.poke(memAddress +257, 0);
	do Memory.poke(memAddress +289, 0);
	do Memory.poke(memAddress +321, 0);
	do Memory.poke(memAddress +353, 0);
	do Memory.poke(memAddress +385, 0);
	do Memory.poke(memAddress +417, 0);
	do Memory.poke(memAddress +449, 0);
	do Memory.poke(memAddress +481, 0);
	do Memory.poke(memAddress +513, 12);
	do Memory.poke(memAddress +545, 6);
	do Memory.poke(memAddress +577, 3);
	do Memory.poke(memAddress +609, 1);
	do Memory.poke(memAddress +641, 1);
	do Memory.poke(memAddress +673, 0);
	do Memory.poke(memAddress +705, 0);
	do Memory.poke(memAddress +737, 0);
	do Memory.poke(memAddress +769, 0);
	do Memory.poke(memAddress +801, 0);
	do Memory.poke(memAddress +833, 0);
	do Memory.poke(memAddress +865, 0);
	do Memory.poke(memAddress +897, 0);
	do Memory.poke(memAddress +929, 0);
	do Memory.poke(memAddress +961, 0);
	do Memory.poke(memAddress +993, 0);
	// column -1
	do Memory.poke(memAddress +479, 4096);
	do Memory.poke(memAddress +511, 24576);
	do Memory.poke(memAddress +543, -16384);
	return;
}
function void moveFarmer2(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 112);
	do Memory.poke(memAddress +32, 252);
	do Memory.poke(memAddress +64, 511);
	do Memory.poke(memAddress +96, 2047);
	do Memory.poke(memAddress +128, 4095);
	do Memory.poke(memAddress +160, 398);
	do Memory.poke(memAddress +192, 774);
	do Memory.poke(memAddress +224, 1538);
	do Memory.poke(memAddress +256, 1163);
	do Memory.poke(memAddress +288, 3073);
	do Memory.poke(memAddress +320, 2049);
	do Memory.poke(memAddress +352, 2553);
	do Memory.poke(memAddress +384, 2309);
	do Memory.poke(memAddress +416, 3075);
	do Memory.poke(memAddress +448, 1054);
	do Memory.poke(memAddress +480, 1008);
	do Memory.poke(memAddress +512, -16192);
	do Memory.poke(memAddress +544, 27840);
	do Memory.poke(memAddress +576, 14878);
	do Memory.poke(memAddress +608, 5106);
	do Memory.poke(memAddress +640, 6147);
	do Memory.poke(memAddress +672, 2050);
	do Memory.poke(memAddress +704, 3086);
	do Memory.poke(memAddress +736, 1560);
	do Memory.poke(memAddress +768, 2040);
	do Memory.poke(memAddress +800, 1032);
	do Memory.poke(memAddress +832, 3080);
	do Memory.poke(memAddress +864, 2508);
	do Memory.poke(memAddress +896, 3964);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	do Memory.poke(memAddress +1, 0);
	do Memory.poke(memAddress +33, 0);
	do Memory.poke(memAddress +65, 0);
	do Memory.poke(memAddress +97, 0);
	do Memory.poke(memAddress +129, 0);
	do Memory.poke(memAddress +161, 0);
	do Memory.poke(memAddress +193, 0);
	do Memory.poke(memAddress +225, 0);
	do Memory.poke(memAddress +257, 0);
	do Memory.poke(memAddress +289, 0);
	do Memory.poke(memAddress +321, 0);
	do Memory.poke(memAddress +353, 0);
	do Memory.poke(memAddress +385, 0);
	do Memory.poke(memAddress +417, 0);
	do Memory.poke(memAddress +449, 0);
	do Memory.poke(memAddress +481, 0);
	do Memory.poke(memAddress +513, 0);
	do Memory.poke(memAddress +545, 0);
	do Memory.poke(memAddress +577, 0);
	do Memory.poke(memAddress +609, 0);
	do Memory.poke(memAddress +641, 0);
	do Memory.poke(memAddress +673, 0);
	do Memory.poke(memAddress +705, 0);
	do Memory.poke(memAddress +737, 0);
	do Memory.poke(memAddress +769, 0);
	do Memory.poke(memAddress +801, 0);
	do Memory.poke(memAddress +833, 0);
	do Memory.poke(memAddress +865, 0);
	do Memory.poke(memAddress +897, 0);
	do Memory.poke(memAddress +929, 0);
	do Memory.poke(memAddress +961, 0);
	do Memory.poke(memAddress +993, 0);
	// column -1
	do Memory.poke(memAddress +447, 4096);
	do Memory.poke(memAddress +479, -12032);
	do Memory.poke(memAddress +511, 30208);
	do Memory.poke(memAddress +543, 15360);
	do Memory.poke(memAddress +575, 4096);
	do Memory.poke(memAddress +607, 28672);
	do Memory.poke(memAddress +639, -28672);
	do Memory.poke(memAddress +671, 4096);
	do Memory.poke(memAddress +703, 4096);
	do Memory.poke(memAddress +735, 4096);
	do Memory.poke(memAddress +767, 4096);
	do Memory.poke(memAddress +799, 4096);
	return;
}
function void moveFarmer3(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 7);
	do Memory.poke(memAddress +32, 15);
	do Memory.poke(memAddress +64, 31);
	do Memory.poke(memAddress +96, 127);
	do Memory.poke(memAddress +128, 255);
	do Memory.poke(memAddress +160, 24);
	do Memory.poke(memAddress +192, 48);
	do Memory.poke(memAddress +224, 96);
	do Memory.poke(memAddress +256, 72);
	do Memory.poke(memAddress +288, 192);
	do Memory.poke(memAddress +320, 128);
	do Memory.poke(memAddress +352, 159);
	do Memory.poke(memAddress +384, 144);
	do Memory.poke(memAddress +416, 192);
	do Memory.poke(memAddress +448, 65);
	do Memory.poke(memAddress +480, 63);
	do Memory.poke(memAddress +512, 3084);
	do Memory.poke(memAddress +544, 1740);
	do Memory.poke(memAddress +576, 929);
	do Memory.poke(memAddress +608, 319);
	do Memory.poke(memAddress +640, 384);
	do Memory.poke(memAddress +672, 128);
	do Memory.poke(memAddress +704, 192);
	do Memory.poke(memAddress +736, 97);
	do Memory.poke(memAddress +768, 127);
	do Memory.poke(memAddress +800, 64);
	do Memory.poke(memAddress +832, 192);
	do Memory.poke(memAddress +864, 156);
	do Memory.poke(memAddress +896, 247);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	// column -1
	do Memory.poke(memAddress -1, 0);
	do Memory.poke(memAddress +31, -16384);
	do Memory.poke(memAddress +63, -4096);
	do Memory.poke(memAddress +95, -4096);
	do Memory.poke(memAddress +127, -4096);
	do Memory.poke(memAddress +159, -8192);
	do Memory.poke(memAddress +191, 24576);
	do Memory.poke(memAddress +223, 8192);
	do Memory.poke(memAddress +255, -20480);
	do Memory.poke(memAddress +287, 4096);
	do Memory.poke(memAddress +319, 4096);
	do Memory.poke(memAddress +351, -28672);
	do Memory.poke(memAddress +383, 20480);
	do Memory.poke(memAddress +415, 12288);
	do Memory.poke(memAddress +447, -7936);
	do Memory.poke(memAddress +479, 3344);
	do Memory.poke(memAddress +511, 1888);
	do Memory.poke(memAddress +543, 960);
	do Memory.poke(memAddress +575, -7936);
	do Memory.poke(memAddress +607, 9984);
	do Memory.poke(memAddress +639, 14592);
	do Memory.poke(memAddress +671, 8448);
	do Memory.poke(memAddress +703, -7936);
	do Memory.poke(memAddress +735, -32512);
	do Memory.poke(memAddress +767, -32512);
	do Memory.poke(memAddress +799, -32512);
	do Memory.poke(memAddress +831, ~32767);
	do Memory.poke(memAddress +863, -16384);
	do Memory.poke(memAddress +895, -16384);
	do Memory.poke(memAddress +927, 0);
	do Memory.poke(memAddress +959, 0);
	do Memory.poke(memAddress +991, 0);
	return;
}
function void moveFarmer4(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 1);
	do Memory.poke(memAddress +96, 7);
	do Memory.poke(memAddress +128, 15);
	do Memory.poke(memAddress +160, 1);
	do Memory.poke(memAddress +192, 3);
	do Memory.poke(memAddress +224, 6);
	do Memory.poke(memAddress +256, 4);
	do Memory.poke(memAddress +288, 12);
	do Memory.poke(memAddress +320, 8);
	do Memory.poke(memAddress +352, 9);
	do Memory.poke(memAddress +384, 9);
	do Memory.poke(memAddress +416, 12);
	do Memory.poke(memAddress +448, 4);
	do Memory.poke(memAddress +480, 3);
	do Memory.poke(memAddress +512, 192);
	do Memory.poke(memAddress +544, 108);
	do Memory.poke(memAddress +576, 58);
	do Memory.poke(memAddress +608, 19);
	do Memory.poke(memAddress +640, 24);
	do Memory.poke(memAddress +672, 8);
	do Memory.poke(memAddress +704, 12);
	do Memory.poke(memAddress +736, 6);
	do Memory.poke(memAddress +768, 7);
	do Memory.poke(memAddress +800, 4);
	do Memory.poke(memAddress +832, 12);
	do Memory.poke(memAddress +864, 9);
	do Memory.poke(memAddress +896, 15);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	// column -1
	do Memory.poke(memAddress -1, 28672);
	do Memory.poke(memAddress +31, -1024);
	do Memory.poke(memAddress +63, -256);
	do Memory.poke(memAddress +95, -256);
	do Memory.poke(memAddress +127, -256);
	do Memory.poke(memAddress +159, -29184);
	do Memory.poke(memAddress +191, 1536);
	do Memory.poke(memAddress +223, 512);
	do Memory.poke(memAddress +255, -29952);
	do Memory.poke(memAddress +287, 256);
	do Memory.poke(memAddress +319, 256);
	do Memory.poke(memAddress +351, -1792);
	do Memory.poke(memAddress +383, 1280);
	do Memory.poke(memAddress +415, 768);
	do Memory.poke(memAddress +447, 7696);
	do Memory.poke(memAddress +479, -3887);
	do Memory.poke(memAddress +511, -16266);
	do Memory.poke(memAddress +543, -16324);
	do Memory.poke(memAddress +575, 7696);
	do Memory.poke(memAddress +607, -3472);
	do Memory.poke(memAddress +639, 912);
	do Memory.poke(memAddress +671, 528);
	do Memory.poke(memAddress +703, 3600);
	do Memory.poke(memAddress +735, 6160);
	do Memory.poke(memAddress +767, -2032);
	do Memory.poke(memAddress +799, 2064);
	do Memory.poke(memAddress +831, 2048);
	do Memory.poke(memAddress +863, -13312);
	do Memory.poke(memAddress +895, 31744);
	do Memory.poke(memAddress +927, 0);
	do Memory.poke(memAddress +959, 0);
	do Memory.poke(memAddress +991, 0);
	return;
}
function void moveFarmer5(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +224, 0);
	do Memory.poke(memAddress +256, 0);
	do Memory.poke(memAddress +288, 0);
	do Memory.poke(memAddress +320, 0);
	do Memory.poke(memAddress +352, 0);
	do Memory.poke(memAddress +384, 0);
	do Memory.poke(memAddress +416, 0);
	do Memory.poke(memAddress +448, 0);
	do Memory.poke(memAddress +480, 0);
	do Memory.poke(memAddress +512, 12);
	do Memory.poke(memAddress +544, 6);
	do Memory.poke(memAddress +576, 3);
	do Memory.poke(memAddress +608, 1);
	do Memory.poke(memAddress +640, 1);
	do Memory.poke(memAddress +672, 0);
	do Memory.poke(memAddress +704, 0);
	do Memory.poke(memAddress +736, 0);
	do Memory.poke(memAddress +768, 0);
	do Memory.poke(memAddress +800, 0);
	do Memory.poke(memAddress +832, 0);
	do Memory.poke(memAddress +864, 0);
	do Memory.poke(memAddress +896, 0);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	// column -2
	do Memory.poke(memAddress +478, 4096);
	do Memory.poke(memAddress +510, 24576);
	do Memory.poke(memAddress +542, -16384);
	// column -1
	do Memory.poke(memAddress -1, 1792);
	do Memory.poke(memAddress +31, 4032);
	do Memory.poke(memAddress +63, 8176);
	do Memory.poke(memAddress +95, 32752);
	do Memory.poke(memAddress +127, -16);
	do Memory.poke(memAddress +159, 6368);
	do Memory.poke(memAddress +191, 12384);
	do Memory.poke(memAddress +223, 24608);
	do Memory.poke(memAddress +255, 18608);
	do Memory.poke(memAddress +287, -16368);
	do Memory.poke(memAddress +319, -32752);
	do Memory.poke(memAddress +351, -24688);
	do Memory.poke(memAddress +383, -28592);
	do Memory.poke(memAddress +415, -16336);
	do Memory.poke(memAddress +447, 16865);
	do Memory.poke(memAddress +479, 16141);
	do Memory.poke(memAddress +511, 3079);
	do Memory.poke(memAddress +543, -13309);
	do Memory.poke(memAddress +575, -24095);
	do Memory.poke(memAddress +607, 16167);
	do Memory.poke(memAddress +639, -32711);
	do Memory.poke(memAddress +671, -32735);
	do Memory.poke(memAddress +703, -16159);
	do Memory.poke(memAddress +735, 24961);
	do Memory.poke(memAddress +767, 32641);
	do Memory.poke(memAddress +799, 16513);
	do Memory.poke(memAddress +831, -16256);
	do Memory.poke(memAddress +863, -25408);
	do Memory.poke(memAddress +895, -2112);
	do Memory.poke(memAddress +927, 0);
	do Memory.poke(memAddress +959, 0);
	do Memory.poke(memAddress +991, 0);
	return;
}
function void moveFarmer6(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +224, 0);
	do Memory.poke(memAddress +256, 0);
	do Memory.poke(memAddress +288, 0);
	do Memory.poke(memAddress +320, 0);
	do Memory.poke(memAddress +352, 0);
	do Memory.poke(memAddress +384, 0);
	do Memory.poke(memAddress +416, 0);
	do Memory.poke(memAddress +448, 0);
	do Memory.poke(memAddress +480, 0);
	do Memory.poke(memAddress +512, 0);
	do Memory.poke(memAddress +544, 0);
	do Memory.poke(memAddress +576, 0);
	do Memory.poke(memAddress +608, 0);
	do Memory.poke(memAddress +640, 0);
	do Memory.poke(memAddress +672, 0);
	do Memory.poke(memAddress +704, 0);
	do Memory.poke(memAddress +736, 0);
	do Memory.poke(memAddress +768, 0);
	do Memory.poke(memAddress +800, 0);
	do Memory.poke(memAddress +832, 0);
	do Memory.poke(memAddress +864, 0);
	do Memory.poke(memAddress +896, 0);
	do Memory.poke(memAddress +928, 0);
	do Memory.poke(memAddress +960, 0);
	do Memory.poke(memAddress +992, 0);
	// column 1
	// column -2
	do Memory.poke(memAddress +446, 4096);
	do Memory.poke(memAddress +478, -12032);
	do Memory.poke(memAddress +510, 30208);
	do Memory.poke(memAddress +542, 15360);
	do Memory.poke(memAddress +574, 4096);
	do Memory.poke(memAddress +606, 28672);
	do Memory.poke(memAddress +638, -28672);
	do Memory.poke(memAddress +670, 4096);
	do Memory.poke(memAddress +702, 4096);
	do Memory.poke(memAddress +734, 4096);
	do Memory.poke(memAddress +766, 4096);
	do Memory.poke(memAddress +798, 4096);
	// column -1
	do Memory.poke(memAddress -1, 112);
	do Memory.poke(memAddress +31, 252);
	do Memory.poke(memAddress +63, 511);
	do Memory.poke(memAddress +95, 2047);
	do Memory.poke(memAddress +127, 4095);
	do Memory.poke(memAddress +159, 398);
	do Memory.poke(memAddress +191, 774);
	do Memory.poke(memAddress +223, 1538);
	do Memory.poke(memAddress +255, 1163);
	do Memory.poke(memAddress +287, 3073);
	do Memory.poke(memAddress +319, 2049);
	do Memory.poke(memAddress +351, 2553);
	do Memory.poke(memAddress +383, 2309);
	do Memory.poke(memAddress +415, 3075);
	do Memory.poke(memAddress +447, 1054);
	do Memory.poke(memAddress +479, 1008);
	do Memory.poke(memAddress +511, -16192);
	do Memory.poke(memAddress +543, 27840);
	do Memory.poke(memAddress +575, 14878);
	do Memory.poke(memAddress +607, 5106);
	do Memory.poke(memAddress +639, 6147);
	do Memory.poke(memAddress +671, 2050);
	do Memory.poke(memAddress +703, 3086);
	do Memory.poke(memAddress +735, 1560);
	do Memory.poke(memAddress +767, 2040);
	do Memory.poke(memAddress +799, 1032);
	do Memory.poke(memAddress +831, 3080);
	do Memory.poke(memAddress +863, 2508);
	do Memory.poke(memAddress +895, 3964);
	do Memory.poke(memAddress +927, 0);
	do Memory.poke(memAddress +959, 0);
	do Memory.poke(memAddress +991, 0);
	return;
}
function void moveFarmer7(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column 1
	// column -2
	do Memory.poke(memAddress -2, 28672);
	do Memory.poke(memAddress +30, -1024);
	do Memory.poke(memAddress +62, -256);
	do Memory.poke(memAddress +94, -256);
	do Memory.poke(memAddress +126, -256);
	do Memory.poke(memAddress +158, -29184);
	do Memory.poke(memAddress +190, 1536);
	do Memory.poke(memAddress +222, 512);
	do Memory.poke(memAddress +254, -29952);
	do Memory.poke(memAddress +286, 256);
	do Memory.poke(memAddress +318, 256);
	do Memory.poke(memAddress +350, -1792);
	do Memory.poke(memAddress +382, 1280);
	do Memory.poke(memAddress +414, 768);
	do Memory.poke(memAddress +446, 7696);
	do Memory.poke(memAddress +478, -3888);
	do Memory.poke(memAddress +510, -16272);
	do Memory.poke(memAddress +542, -16336);
	do Memory.poke(memAddress +574, 7696);
	do Memory.poke(memAddress +606, -3472);
	do Memory.poke(memAddress +638, 912);
	do Memory.poke(memAddress +670, 528);
	do Memory.poke(memAddress +702, 3600);
	do Memory.poke(memAddress +734, 6160);
	do Memory.poke(memAddress +766, -2032);
	do Memory.poke(memAddress +798, 2064);
	do Memory.poke(memAddress +830, 2048);
	do Memory.poke(memAddress +862, -13312);
	do Memory.poke(memAddress +894, 31744);
	do Memory.poke(memAddress +926, 0);
	do Memory.poke(memAddress +958, 0);
	do Memory.poke(memAddress +990, 0);
	// column -1
	do Memory.poke(memAddress -1, 0);
	do Memory.poke(memAddress +31, 0);
	do Memory.poke(memAddress +63, 1);
	do Memory.poke(memAddress +95, 7);
	do Memory.poke(memAddress +127, 15);
	do Memory.poke(memAddress +159, 1);
	do Memory.poke(memAddress +191, 3);
	do Memory.poke(memAddress +223, 6);
	do Memory.poke(memAddress +255, 4);
	do Memory.poke(memAddress +287, 12);
	do Memory.poke(memAddress +319, 8);
	do Memory.poke(memAddress +351, 9);
	do Memory.poke(memAddress +383, 9);
	do Memory.poke(memAddress +415, 12);
	do Memory.poke(memAddress +447, 4);
	do Memory.poke(memAddress +479, 3);
	do Memory.poke(memAddress +511, 192);
	do Memory.poke(memAddress +543, 108);
	do Memory.poke(memAddress +575, 58);
	do Memory.poke(memAddress +607, 19);
	do Memory.poke(memAddress +639, 24);
	do Memory.poke(memAddress +671, 8);
	do Memory.poke(memAddress +703, 12);
	do Memory.poke(memAddress +735, 6);
	do Memory.poke(memAddress +767, 7);
	do Memory.poke(memAddress +799, 4);
	do Memory.poke(memAddress +831, 12);
	do Memory.poke(memAddress +863, 9);
	do Memory.poke(memAddress +895, 15);
	do Memory.poke(memAddress +927, 0);
	do Memory.poke(memAddress +959, 0);
	do Memory.poke(memAddress +991, 0);
	return;
}
function void moveFarmer8(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column -3
	do Memory.poke(memAddress -3, 0);
	do Memory.poke(memAddress +29, 0);
	do Memory.poke(memAddress +61, 0);
	do Memory.poke(memAddress +93, 0);
	do Memory.poke(memAddress +125, 0);
	do Memory.poke(memAddress +157, 0);
	do Memory.poke(memAddress +189, 0);
	do Memory.poke(memAddress +221, 0);
	do Memory.poke(memAddress +253, 0);
	do Memory.poke(memAddress +285, 0);
	do Memory.poke(memAddress +317, 0);
	do Memory.poke(memAddress +349, 0);
	do Memory.poke(memAddress +381, 0);
	do Memory.poke(memAddress +413, 0);
	do Memory.poke(memAddress +445, 0);
	do Memory.poke(memAddress +477, 0);
	do Memory.poke(memAddress +509, 0);
	do Memory.poke(memAddress +541, 0);
	do Memory.poke(memAddress +573, 0);
	do Memory.poke(memAddress +605, 0);
	do Memory.poke(memAddress +637, 0);
	do Memory.poke(memAddress +669, 0);
	do Memory.poke(memAddress +701, 0);
	do Memory.poke(memAddress +733, 0);
	do Memory.poke(memAddress +765, 0);
	do Memory.poke(memAddress +797, 0);
	do Memory.poke(memAddress +829, 0);
	do Memory.poke(memAddress +861, 0);
	do Memory.poke(memAddress +893, 0);
	do Memory.poke(memAddress +925, 0);
	do Memory.poke(memAddress +957, 0);
	do Memory.poke(memAddress +989, 0);
	// column -2
	do Memory.poke(memAddress -2, 0);
	do Memory.poke(memAddress +30, 0);
	do Memory.poke(memAddress +62, 0);
	do Memory.poke(memAddress +94, 0);
	do Memory.poke(memAddress +126, 0);
	do Memory.poke(memAddress +158, 0);
	do Memory.poke(memAddress +190, 0);
	do Memory.poke(memAddress +222, 0);
	do Memory.poke(memAddress +254, 0);
	do Memory.poke(memAddress +286, 0);
	do Memory.poke(memAddress +318, 0);
	do Memory.poke(memAddress +350, 0);
	do Memory.poke(memAddress +382, 0);
	do Memory.poke(memAddress +414, 0);
	do Memory.poke(memAddress +446, 0);
	do Memory.poke(memAddress +478, 0);
	do Memory.poke(memAddress +510, 0);
	do Memory.poke(memAddress +542, 0);
	do Memory.poke(memAddress +574, 0);
	do Memory.poke(memAddress +606, 0);
	do Memory.poke(memAddress +638, 0);
	do Memory.poke(memAddress +670, 0);
	do Memory.poke(memAddress +702, 0);
	do Memory.poke(memAddress +734, 0);
	do Memory.poke(memAddress +766, 0);
	do Memory.poke(memAddress +798, 0);
	do Memory.poke(memAddress +830, 0);
	do Memory.poke(memAddress +862, 0);
	do Memory.poke(memAddress +894, 0);
	do Memory.poke(memAddress +926, 0);
	do Memory.poke(memAddress +958, 0);
	do Memory.poke(memAddress +990, 0);
	// column -1
	return;
}
}
