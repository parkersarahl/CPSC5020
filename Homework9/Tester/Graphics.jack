class Graphics {   
        
function void drawChicken(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress -992, 0);
	do Memory.poke(memAddress -960, 0);
	do Memory.poke(memAddress -928, 0);
	do Memory.poke(memAddress -896, 0);
	do Memory.poke(memAddress -864, 0);
	do Memory.poke(memAddress -832, 0);
	do Memory.poke(memAddress -800, 0);
	do Memory.poke(memAddress -768, 0);
	do Memory.poke(memAddress -736, 0);
	do Memory.poke(memAddress -704, 0);
	do Memory.poke(memAddress -672, 0);
	do Memory.poke(memAddress -640, 0);
	do Memory.poke(memAddress -608, 0);
	do Memory.poke(memAddress -576, 0);
	do Memory.poke(memAddress -544, 0);
	do Memory.poke(memAddress -512, 0);
	do Memory.poke(memAddress -480, -16384);
	do Memory.poke(memAddress -448, 9088);
	do Memory.poke(memAddress -416, 7040);
	do Memory.poke(memAddress -384, 8064);
	do Memory.poke(memAddress -352, 3840);
	do Memory.poke(memAddress -320, 19456);
	do Memory.poke(memAddress -288, -31744);
	do Memory.poke(memAddress -256, 2048);
	do Memory.poke(memAddress -224, 4096);
	do Memory.poke(memAddress -192, -8192);
	do Memory.poke(memAddress -160, 8192);
	do Memory.poke(memAddress -128, 8192);
	do Memory.poke(memAddress -96, 8192);
	do Memory.poke(memAddress -64, 20480);
	do Memory.poke(memAddress -32, -30720);
	do Memory.poke(memAddress, 0);
	// column 1
	do Memory.poke(memAddress -991, 0);
	do Memory.poke(memAddress -959, 0);
	do Memory.poke(memAddress -927, 0);
	do Memory.poke(memAddress -895, 0);
	do Memory.poke(memAddress -863, 0);
	do Memory.poke(memAddress -831, 0);
	do Memory.poke(memAddress -799, 0);
	do Memory.poke(memAddress -767, 0);
	do Memory.poke(memAddress -735, 0);
	do Memory.poke(memAddress -703, 0);
	do Memory.poke(memAddress -671, 0);
	do Memory.poke(memAddress -639, 0);
	do Memory.poke(memAddress -607, 0);
	do Memory.poke(memAddress -575, 3968);
	do Memory.poke(memAddress -543, 4160);
	do Memory.poke(memAddress -511, 9280);
	do Memory.poke(memAddress -479, -16345);
	do Memory.poke(memAddress -447, 24600);
	do Memory.poke(memAddress -415, 8256);
	do Memory.poke(memAddress -383, 6528);
	do Memory.poke(memAddress -351, 1924);
	do Memory.poke(memAddress -319, 98);
	do Memory.poke(memAddress -287, 33);
	do Memory.poke(memAddress -255, 16);
	do Memory.poke(memAddress -223, 12);
	do Memory.poke(memAddress -191, 15);
	do Memory.poke(memAddress -159, 8);
	do Memory.poke(memAddress -127, 8);
	do Memory.poke(memAddress -95, 8);
	do Memory.poke(memAddress -63, 20);
	do Memory.poke(memAddress -31, 34);
	do Memory.poke(memAddress +1, 0);
	// column 2
	do Memory.poke(memAddress -990, 0);
	do Memory.poke(memAddress -958, 0);
	do Memory.poke(memAddress -926, 0);
	do Memory.poke(memAddress -894, 0);
	do Memory.poke(memAddress -862, 0);
	do Memory.poke(memAddress -830, 0);
	do Memory.poke(memAddress -798, 0);
	do Memory.poke(memAddress -766, 0);
	do Memory.poke(memAddress -734, 0);
	do Memory.poke(memAddress -702, 0);
	do Memory.poke(memAddress -670, 0);
	do Memory.poke(memAddress -638, 0);
	do Memory.poke(memAddress -606, 0);
	do Memory.poke(memAddress -574, 0);
	do Memory.poke(memAddress -542, 0);
	do Memory.poke(memAddress -510, 0);
	do Memory.poke(memAddress -478, 0);
	do Memory.poke(memAddress -446, 0);
	do Memory.poke(memAddress -414, 0);
	do Memory.poke(memAddress -382, 0);
	do Memory.poke(memAddress -350, 0);
	do Memory.poke(memAddress -318, 0);
	do Memory.poke(memAddress -286, 0);
	do Memory.poke(memAddress -254, 0);
	do Memory.poke(memAddress -222, 0);
	do Memory.poke(memAddress -190, 0);
	do Memory.poke(memAddress -158, 0);
	do Memory.poke(memAddress -126, 0);
	do Memory.poke(memAddress -94, 0);
	do Memory.poke(memAddress -62, 0);
	do Memory.poke(memAddress -30, 0);
	do Memory.poke(memAddress +2, 0);
	return;
}
function void drawFarmer(int location){
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column 1
	// column 2
	do Memory.poke(memAddress -414, 0);
	do Memory.poke(memAddress -478, 0);
	do Memory.poke(memAddress -446, 0);
	do Memory.poke(memAddress -382, 0);
	// column 3
	do Memory.poke(memAddress -861, -2048);
	do Memory.poke(memAddress -925, 0);
	do Memory.poke(memAddress -893, 0);
	do Memory.poke(memAddress -829, -2048);
	do Memory.poke(memAddress -797, -128);
	do Memory.poke(memAddress -765, 2048);
	do Memory.poke(memAddress -733, 13312);
	do Memory.poke(memAddress -701, 12800);
	do Memory.poke(memAddress -669, 512);
	do Memory.poke(memAddress -605, -3584);
	do Memory.poke(memAddress -637, 0);
	do Memory.poke(memAddress -573, 4096);
	do Memory.poke(memAddress -541, 8960);
	do Memory.poke(memAddress -509, -3584);
	do Memory.poke(memAddress -477, 1024);
	do Memory.poke(memAddress -445, -4056);
	do Memory.poke(memAddress -413, -14308);
	do Memory.poke(memAddress -381, 1068);
	do Memory.poke(memAddress -349, 576);
	do Memory.poke(memAddress -317, 128);
	do Memory.poke(memAddress -285, 256);
	do Memory.poke(memAddress -253, 256);
	do Memory.poke(memAddress -189, 512);
	do Memory.poke(memAddress -221, 0);
	do Memory.poke(memAddress -157, 1024);
	do Memory.poke(memAddress -125, 18432);
	do Memory.poke(memAddress -93, 2048);
	do Memory.poke(memAddress -61, 0);
	do Memory.poke(memAddress -29, 2048);
	do Memory.poke(memAddress +3, 1024);
	do Memory.poke(memAddress +35, 512);
	do Memory.poke(memAddress +67, -15904);
	// column 4
	do Memory.poke(memAddress -860, 63);
	do Memory.poke(memAddress -924, 0);
	do Memory.poke(memAddress -892, 0);
	do Memory.poke(memAddress -828, 15);
	do Memory.poke(memAddress -796, 63);
	do Memory.poke(memAddress -764, 16);
	do Memory.poke(memAddress -732, 38);
	do Memory.poke(memAddress -700, 6);
	do Memory.poke(memAddress -668, 32);
	do Memory.poke(memAddress -604, 35);
	do Memory.poke(memAddress -636, 0);
	do Memory.poke(memAddress -572, 1058);
	do Memory.poke(memAddress -540, 9377);
	do Memory.poke(memAddress -508, 5392);
	do Memory.poke(memAddress -476, 2568);
	do Memory.poke(memAddress -444, 3343);
	do Memory.poke(memAddress -412, 1792);
	do Memory.poke(memAddress -380, 1410);
	do Memory.poke(memAddress -348, 1244);
	do Memory.poke(memAddress -316, 1120);
	do Memory.poke(memAddress -284, 1056);
	do Memory.poke(memAddress -252, 1024);
	do Memory.poke(memAddress -220, 1056);
	do Memory.poke(memAddress -188, 1040);
	do Memory.poke(memAddress -156, 1032);
	do Memory.poke(memAddress -124, 5);
	do Memory.poke(memAddress -92, 2);
	do Memory.poke(memAddress -60, 2);
	do Memory.poke(memAddress +4, 2);
	do Memory.poke(memAddress -28, 0);
	do Memory.poke(memAddress +36, 2);
	do Memory.poke(memAddress +68, 3);
	return;
}

function void moveFarmer1(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column 1
	// column 2
	do Memory.poke(memAddress -798, 0);
	do Memory.poke(memAddress -862, 0);
	do Memory.poke(memAddress -830, 0);
	do Memory.poke(memAddress -542, 0);
	do Memory.poke(memAddress -606, 0);
	do Memory.poke(memAddress -574, 0);
	do Memory.poke(memAddress -446, 0);
	do Memory.poke(memAddress -510, 0);
	do Memory.poke(memAddress -478, 0);
	do Memory.poke(memAddress -414, 0);
	do Memory.poke(memAddress -382, 0);
	do Memory.poke(memAddress -350, 0);
	do Memory.poke(memAddress -318, 0);
	do Memory.poke(memAddress -286, 0);
	do Memory.poke(memAddress -254, 0);
	do Memory.poke(memAddress +66, 0);
	do Memory.poke(memAddress +2, 0);
	do Memory.poke(memAddress +34, 0);
	// column 3
	do Memory.poke(memAddress -861, -1024);
	do Memory.poke(memAddress -925, 0);
	do Memory.poke(memAddress -893, 0);
	do Memory.poke(memAddress -829, -1024);
	do Memory.poke(memAddress -797, -64);
	do Memory.poke(memAddress -765, 1024);
	do Memory.poke(memAddress -733, 6656);
	do Memory.poke(memAddress -701, 6400);
	do Memory.poke(memAddress -669, 256);
	do Memory.poke(memAddress -605, -1792);
	do Memory.poke(memAddress -637, 0);
	do Memory.poke(memAddress -573, 2048);
	do Memory.poke(memAddress -541, -28288);
	do Memory.poke(memAddress -509, 30976);
	do Memory.poke(memAddress -477, 512);
	do Memory.poke(memAddress -445, -2028);
	do Memory.poke(memAddress -413, 25614);
	do Memory.poke(memAddress -381, 534);
	do Memory.poke(memAddress -349, 288);
	do Memory.poke(memAddress -317, 64);
	do Memory.poke(memAddress -285, 128);
	do Memory.poke(memAddress -253, 128);
	do Memory.poke(memAddress -221, 0);
	do Memory.poke(memAddress -189, 256);
	do Memory.poke(memAddress -157, 512);
	do Memory.poke(memAddress -125, -23552);
	do Memory.poke(memAddress -93, 1024);
	do Memory.poke(memAddress -61, 0);
	do Memory.poke(memAddress -29, 1024);
	do Memory.poke(memAddress +3, 512);
	do Memory.poke(memAddress +35, 256);
	do Memory.poke(memAddress +67, -7952);
	// column 4
	do Memory.poke(memAddress -860, 31);
	do Memory.poke(memAddress -924, 0);
	do Memory.poke(memAddress -892, 0);
	do Memory.poke(memAddress -828, 7);
	do Memory.poke(memAddress -796, 31);
	do Memory.poke(memAddress -764, 8);
	do Memory.poke(memAddress -732, 19);
	do Memory.poke(memAddress -700, 3);
	do Memory.poke(memAddress -668, 16);
	do Memory.poke(memAddress -604, 17);
	do Memory.poke(memAddress -636, 0);
	do Memory.poke(memAddress -572, 529);
	do Memory.poke(memAddress -540, 592);
	do Memory.poke(memAddress -508, 648);
	do Memory.poke(memAddress -476, 260);
	do Memory.poke(memAddress -444, 647);
	do Memory.poke(memAddress -412, 896);
	do Memory.poke(memAddress -380, 705);
	do Memory.poke(memAddress -348, 622);
	do Memory.poke(memAddress -316, 560);
	do Memory.poke(memAddress -284, 528);
	do Memory.poke(memAddress -252, 512);
	do Memory.poke(memAddress -220, 528);
	do Memory.poke(memAddress -188, 520);
	do Memory.poke(memAddress -156, 516);
	do Memory.poke(memAddress -124, 2);
	do Memory.poke(memAddress -92, 1);
	do Memory.poke(memAddress -60, 1);
	do Memory.poke(memAddress +4, 1);
	do Memory.poke(memAddress -28, 0);
	do Memory.poke(memAddress +36, 1);
	do Memory.poke(memAddress +68, 1);
	return;
}
function void moveFarmer2(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column 1
	// column 2
	do Memory.poke(memAddress -862, 0);
	do Memory.poke(memAddress -926, 0);
	do Memory.poke(memAddress -894, 0);
	do Memory.poke(memAddress -830, 0);
	do Memory.poke(memAddress -798, 0);
	do Memory.poke(memAddress -766, 0);
	do Memory.poke(memAddress -734, 0);
	do Memory.poke(memAddress -702, 0);
	do Memory.poke(memAddress -670, 0);
	do Memory.poke(memAddress -606, 0);
	do Memory.poke(memAddress -638, 0);
	do Memory.poke(memAddress -574, 0);
	do Memory.poke(memAddress -542, 0);
	do Memory.poke(memAddress -510, 0);
	do Memory.poke(memAddress -478, 0);
	do Memory.poke(memAddress -446, 16384);
	do Memory.poke(memAddress -414, -8192);
	do Memory.poke(memAddress -382, 24576);
	do Memory.poke(memAddress -350, 0);
	do Memory.poke(memAddress -318, 0);
	do Memory.poke(memAddress -286, 0);
	do Memory.poke(memAddress -254, 0);
	do Memory.poke(memAddress -190, 0);
	do Memory.poke(memAddress -222, 0);
	do Memory.poke(memAddress -158, 0);
	do Memory.poke(memAddress -126, 0);
	do Memory.poke(memAddress -94, 0);
	do Memory.poke(memAddress -30, 0);
	do Memory.poke(memAddress -62, 0);
	do Memory.poke(memAddress +2, 0);
	do Memory.poke(memAddress +34, 0);
	do Memory.poke(memAddress +66, 0);
	// column 3
	do Memory.poke(memAddress -861, -64);
	do Memory.poke(memAddress -925, 0);
	do Memory.poke(memAddress -893, 0);
	do Memory.poke(memAddress -829, 32704);
	do Memory.poke(memAddress -797, -4);
	do Memory.poke(memAddress -765, -32704);
	do Memory.poke(memAddress -733, 12704);
	do Memory.poke(memAddress -701, 12688);
	do Memory.poke(memAddress -669, 16);
	do Memory.poke(memAddress -605, 8080);
	do Memory.poke(memAddress -637, 0);
	do Memory.poke(memAddress -573, 4224);
	do Memory.poke(memAddress -541, 2328);
	do Memory.poke(memAddress -509, -30832);
	do Memory.poke(memAddress -477, 16416);
	do Memory.poke(memAddress -445, 32641);
	do Memory.poke(memAddress -413, 1600);
	do Memory.poke(memAddress -381, 4129);
	do Memory.poke(memAddress -349, -8174);
	do Memory.poke(memAddress -317, 4);
	do Memory.poke(memAddress -285, 8);
	do Memory.poke(memAddress -253, 8);
	do Memory.poke(memAddress -221, 0);
	do Memory.poke(memAddress -189, -32752);
	do Memory.poke(memAddress -157, 16416);
	do Memory.poke(memAddress -125, 10816);
	do Memory.poke(memAddress -93, 4160);
	do Memory.poke(memAddress -61, 4096);
	do Memory.poke(memAddress -29, 64);
	do Memory.poke(memAddress +3, 4128);
	do Memory.poke(memAddress +35, 4112);
	do Memory.poke(memAddress +67, 7695);
	// column 4
	do Memory.poke(memAddress -860, 1);
	do Memory.poke(memAddress -924, 0);
	do Memory.poke(memAddress -892, 0);
	do Memory.poke(memAddress -796, 1);
	do Memory.poke(memAddress -828, 0);
	do Memory.poke(memAddress -732, 1);
	do Memory.poke(memAddress -764, 0);
	do Memory.poke(memAddress -668, 1);
	do Memory.poke(memAddress -700, 0);
	do Memory.poke(memAddress -604, 1);
	do Memory.poke(memAddress -636, 0);
	do Memory.poke(memAddress -572, 33);
	do Memory.poke(memAddress -540, 37);
	do Memory.poke(memAddress -508, 40);
	do Memory.poke(memAddress -476, 16);
	do Memory.poke(memAddress -444, 40);
	do Memory.poke(memAddress -412, 56);
	do Memory.poke(memAddress -380, 44);
	do Memory.poke(memAddress -348, 38);
	do Memory.poke(memAddress -316, 35);
	do Memory.poke(memAddress -284, 33);
	do Memory.poke(memAddress -252, 32);
	do Memory.poke(memAddress -220, 33);
	do Memory.poke(memAddress -188, 32);
	do Memory.poke(memAddress -156, 32);
	return;
}


function void moveFarmer3(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column 1
	// column 2
	do Memory.poke(memAddress -862, 0);
	do Memory.poke(memAddress -926, 0);
	do Memory.poke(memAddress -894, 0);
	do Memory.poke(memAddress -830, 0);
	do Memory.poke(memAddress -798, ~32767);
	do Memory.poke(memAddress -766, 0);
	do Memory.poke(memAddress -734, 0);
	do Memory.poke(memAddress -702, 0);
	do Memory.poke(memAddress -670, 0);
	do Memory.poke(memAddress -606, 0);
	do Memory.poke(memAddress -638, 0);
	do Memory.poke(memAddress -574, 0);
	do Memory.poke(memAddress -542, 0);
	do Memory.poke(memAddress -510, 0);
	do Memory.poke(memAddress -478, 0);
	do Memory.poke(memAddress -446, 10240);
	do Memory.poke(memAddress -414, 7168);
	do Memory.poke(memAddress -382, 11264);
	do Memory.poke(memAddress -350, 16384);
	do Memory.poke(memAddress -318, ~32767);
	do Memory.poke(memAddress -286, 0);
	do Memory.poke(memAddress -254, 0);
	do Memory.poke(memAddress -190, 0);
	do Memory.poke(memAddress -222, 0);
	do Memory.poke(memAddress -158, 0);
	do Memory.poke(memAddress -126, 0);
	do Memory.poke(memAddress -94, 0);
	do Memory.poke(memAddress -30, 0);
	do Memory.poke(memAddress -62, 0);
	do Memory.poke(memAddress +2, 0);
	do Memory.poke(memAddress +34, 0);
	do Memory.poke(memAddress +66, -8192);
	// column 3
	do Memory.poke(memAddress -861, 16376);
	do Memory.poke(memAddress -925, 0);
	do Memory.poke(memAddress -893, 0);
	do Memory.poke(memAddress -829, 4088);
	do Memory.poke(memAddress -797, 16383);
	do Memory.poke(memAddress -765, 4104);
	do Memory.poke(memAddress -733, 9780);
	do Memory.poke(memAddress -701, 1586);
	do Memory.poke(memAddress -669, 8194);
	do Memory.poke(memAddress -605, 9202);
	do Memory.poke(memAddress -637, 0);
	do Memory.poke(memAddress -573, 8720);
	do Memory.poke(memAddress -541, -24285);
	do Memory.poke(memAddress -509, 4338);
	do Memory.poke(memAddress -477, 2052);
	do Memory.poke(memAddress -445, 4080);
	do Memory.poke(memAddress -413, 200);
	do Memory.poke(memAddress -381, -32252);
	do Memory.poke(memAddress -349, -9214);
	do Memory.poke(memAddress -317, 24576);
	do Memory.poke(memAddress -285, 8193);
	do Memory.poke(memAddress -253, 1);
	do Memory.poke(memAddress -221, 8192);
	do Memory.poke(memAddress -189, 4098);
	do Memory.poke(memAddress -157, 2052);
	do Memory.poke(memAddress -125, 1352);
	do Memory.poke(memAddress -93, 520);
	do Memory.poke(memAddress -61, 512);
	do Memory.poke(memAddress -29, 8);
	do Memory.poke(memAddress +3, 516);
	do Memory.poke(memAddress +35, 514);
	do Memory.poke(memAddress +67, 961);
	// column 4
	do Memory.poke(memAddress -572, 4);
	do Memory.poke(memAddress -636, 0);
	do Memory.poke(memAddress -604, 0);
	do Memory.poke(memAddress -540, 4);
	do Memory.poke(memAddress -508, 5);
	do Memory.poke(memAddress -476, 2);
	do Memory.poke(memAddress -444, 5);
	do Memory.poke(memAddress -412, 7);
	do Memory.poke(memAddress -380, 5);
	do Memory.poke(memAddress -348, 4);
	do Memory.poke(memAddress -316, 4);
	do Memory.poke(memAddress -284, 4);
	do Memory.poke(memAddress -252, 4);
	do Memory.poke(memAddress -220, 4);
	do Memory.poke(memAddress -188, 4);
	do Memory.poke(memAddress -156, 4);
	return;
}

function void moveFarmer4(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column 1
	do Memory.poke(memAddress -799, 0);
	do Memory.poke(memAddress -863, 0);
	do Memory.poke(memAddress -831, 0);
	do Memory.poke(memAddress -735, 0);
	do Memory.poke(memAddress -767, 0);
	do Memory.poke(memAddress -703, 0);
	do Memory.poke(memAddress -671, 0);
	do Memory.poke(memAddress -607, 0);
	do Memory.poke(memAddress -639, 0);
	do Memory.poke(memAddress -543, 0);
	do Memory.poke(memAddress -575, 0);
	do Memory.poke(memAddress -511, 0);
	do Memory.poke(memAddress -479, 0);
	do Memory.poke(memAddress -447, 0);
	do Memory.poke(memAddress -415, ~32767);
	do Memory.poke(memAddress -383, ~32767);
	do Memory.poke(memAddress -351, 0);
	do Memory.poke(memAddress -319, 0);
	do Memory.poke(memAddress -287, 0);
	do Memory.poke(memAddress -255, 0);
	do Memory.poke(memAddress -191, 0);
	do Memory.poke(memAddress -223, 0);
	do Memory.poke(memAddress -159, 0);
	do Memory.poke(memAddress +1, 0);
	do Memory.poke(memAddress -63, 0);
	do Memory.poke(memAddress -31, 0);
	do Memory.poke(memAddress +33, 0);
	do Memory.poke(memAddress +65, 0);
	// column 2
	do Memory.poke(memAddress -862, -256);
	do Memory.poke(memAddress -926, 0);
	do Memory.poke(memAddress -894, 0);
	do Memory.poke(memAddress -830, -256);
	do Memory.poke(memAddress -798, -16);
	do Memory.poke(memAddress -766, 256);
	do Memory.poke(memAddress -734, -14720);
	do Memory.poke(memAddress -702, -14784);
	do Memory.poke(memAddress -670, 64);
	do Memory.poke(memAddress -606, 32320);
	do Memory.poke(memAddress -638, 0);
	do Memory.poke(memAddress -574, 16896);
	do Memory.poke(memAddress -542, 9312);
	do Memory.poke(memAddress -510, 7744);
	do Memory.poke(memAddress -478, 128);
	do Memory.poke(memAddress -446, -507);
	do Memory.poke(memAddress -414, 6403);
	do Memory.poke(memAddress -382, 16517);
	do Memory.poke(memAddress -350, -32696);
	do Memory.poke(memAddress -318, 16);
	do Memory.poke(memAddress -286, 32);
	do Memory.poke(memAddress -254, 32);
	do Memory.poke(memAddress -222, 0);
	do Memory.poke(memAddress -190, 64);
	do Memory.poke(memAddress -158, 128);
	do Memory.poke(memAddress -126, -22272);
	do Memory.poke(memAddress -94, 16640);
	do Memory.poke(memAddress -62, 16384);
	do Memory.poke(memAddress -30, 256);
	do Memory.poke(memAddress +2, 16512);
	do Memory.poke(memAddress +34, 16448);
	do Memory.poke(memAddress +66, 30780);
	// column 3
	do Memory.poke(memAddress -861, 7);
	do Memory.poke(memAddress -925, 0);
	do Memory.poke(memAddress -893, 0);
	do Memory.poke(memAddress -829, 1);
	do Memory.poke(memAddress -797, 7);
	do Memory.poke(memAddress -765, 2);
	do Memory.poke(memAddress -733, 4);
	do Memory.poke(memAddress -669, 4);
	do Memory.poke(memAddress -701, 0);
	do Memory.poke(memAddress -605, 4);
	do Memory.poke(memAddress -637, 0);
	do Memory.poke(memAddress -573, 132);
	do Memory.poke(memAddress -541, 148);
	do Memory.poke(memAddress -509, 162);
	do Memory.poke(memAddress -477, 65);
	do Memory.poke(memAddress -445, 161);
	do Memory.poke(memAddress -413, 224);
	do Memory.poke(memAddress -381, 176);
	do Memory.poke(memAddress -349, 155);
	do Memory.poke(memAddress -317, 140);
	do Memory.poke(memAddress -285, 132);
	do Memory.poke(memAddress -253, 128);
	do Memory.poke(memAddress -221, 132);
	do Memory.poke(memAddress -189, 130);
	do Memory.poke(memAddress -157, 129);
	return;
}
}